#### SELECT
1. Selezionare tutti gli studenti nati nel 1990 `(160)`

    SELECT *
    FROM students 
    WHERE date_of_birth 
        BETWEEN '1990-01-01' AND '1991-01-01';

2. Selezionare tutti i corsi che valgono più di 10 crediti `(479)`

    SELECT * 
    FROM courses
	    WHERE cfu > '10';


3. Selezionare tutti gli studenti che hanno più di 30 anni

    SELECT * 
    FROM students
        WHERE date_of_birth < '1993';


4. Selezionare tutti i corsi del primo semestre del primo anno di un qualsiasi corso di laurea `(286)`

    SELECT *
    FROM courses
        WHERE period = 'I semestre'
            AND degree_id = '1'
                AND year = '1';


5. Selezionare tutti gli appelli d'esame che avvengono nel pomeriggio (dopo le 14) del 20/06/2020 `(21)`

    SELECT * 
    FROM exams
        WHERE date = '2020-06-20'
            AND hour >= '14:00';


6. Selezionare tutti i corsi di laurea magistrale `(38)`

    SELECT *
    FROM degrees
        WHERE level = 'magistrale';

7. Contare il numero di dipartimenti di cui e' composta l'università `(12)`

    SELECT COUNT(*)
    FROM departments;



8. Contare gli insegnanti che non hanno un numero di telefono `(50)`

    SELECT teachers COUNT(*)
        FROM phone
        WHERE phone IS NULL;



#### GROUP BY
1. Contare quanti iscritti ci sono stati ogni anno

    SELECT YEAR(enrolment_date), COUNT(*)
    FROM students
        GROUP BY YEAR(enrolment_date);



2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio

    SELECT office_address, COUNT(*)
    FROM teachers
        GROUP BY office_address;

3. Calcolare la media dei voti di ogni appello d'esame
  
    SELECT exams.date, 
        AVG(exam_student.vote) 
    FROM exams 
        LEFT JOIN exam_student ON exams.id = exam_student.exam_id 
            GROUP BY exams.date;


4. Contare quanti corsi di laurea ci sono per ogni dipartimento

    SELECT departments.name, COUNT(courses.name)
        FROM departments 
    LEFT JOIN degrees ON departments.id = degrees.department_id
    LEFT JOIN courses ON degrees.id = courses.degree_id
        GROUP BY departments.name;


        JOIN


1. Selezionare tutti gli studenti iscritti al `Corso di Laurea in Economia`

    SELECT students.*
        FROM degrees
        JOIN students
                ON students.degree_id = degrees.id
                WHERE degrees.name LIKE "Corso di Laurea in Economia";


2. Selezionare tutti i `Corsi di Laurea Magistrale del Dipartimento di
Neuroscienze`

    SELECT degrees.*
        FROM departments
    JOIN degrees ON degrees.department_id = departments.id
        WHERE departments.name LIKE "Dipartimento di Neuroscienze"
        AND degrees.name LIKE "%Corso di Laurea Magistrale%";



3. Selezionare tutti i corsi in cui insegna `Fulvio Amato` (id=`44`)

    SELECT *
        FROM teachers
    JOIN course_teacher ON course_teacher.teacher_id = teachers.id
    JOIN courses ON courses.id = course_teacher.course_id
        WHERE teachers.id = 44;



4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui
sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e
nome

    SELECT students.name, students.surname, degrees.name, degrees.department_id
        FROM students
    JOIN degrees ON 
        students.degree_id=degrees.id
    JOIN departments ON
        degrees.department_id=departments.id
    ORDER BY students.surname;



5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti

    SELECT degrees.name, courses.name, teachers.name, teachers.surname
        FROM degrees
    JOIN courses ON
        courses.degree_id=degrees.id
    JOIN course_teacher ON
        course_teacher.course_id=courses.id
    RIGHT JOIN teachers ON
        course_teacher.teacher_id=teachers.id;


6. Selezionare tutti i docenti che insegnano nel `Dipartimento di
Matematica` (54)

    SELECT DISTINCT teachers.*
        FROM teachers
    JOIN course_teacher ON course_teacher.teacher_id = teachers.id
    JOIN courses ON courses.id = course_teacher.course_id
    JOIN degrees ON degrees.id = courses.degree_id
    JOIN departments ON departments.id = degrees.department_id
        WHERE departments.name = 'Dipartimento di Matematica';

or

    SELECT DISTINCT teachers.name, teachers.surname
        FROM teachers
    JOIN course_teacher ON course_teacher.teacher_id = teachers.id
    JOIN courses ON courses.id = course_teacher.course_id
    JOIN degrees ON degrees.id = courses.degree_id
    JOIN departments ON departments.id = degrees.department_id
        WHERE departments.name = 'Dipartimento di Matematica';



##### Bonus
7. Selezionare per ogni studente il numero di tentativi sostenuti
per ogni esame, stampando anche il voto massimo. Successivamente,
filtrare i tentativi con voto minimo 18.
